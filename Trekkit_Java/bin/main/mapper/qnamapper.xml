<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"file:///C:\Users\805-06\Desktop\TP\5\Java\Trekkit_Java\src\main\resources\dtd\mybatis-3-mapper.dtd">
<mapper namespace="com.Trekkit_Java.DAO.QnaDAO">

    <resultMap id="QnaQuestionResultMap" type="com.Trekkit_Java.DTO.QnaQuestionDTO">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="nickname" column="nickname"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="mountain" column="mountain"/>
        <result property="viewCount" column="view_count"/>
        <result property="answerCount" column="answer_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="isSolved" column="is_solved"/>
        <result property="acceptedAnswerId" column="accepted_answer_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <resultMap id="QnaAnswerResultMap" type="com.Trekkit_Java.DTO.QnaAnswerDTO">
        <id property="id" column="id"/>
        <result property="questionId" column="question_id"/>
        <result property="userId" column="user_id"/>
        <result property="nickname" column="nickname"/>
        <result property="userLoginId" column="user_login_id"/> <result property="content" column="content"/>
        <result property="likeCount" column="like_count"/>
        <result property="isAccepted" column="is_accepted"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>


    <select id="getAllQuestions" resultMap="QnaQuestionResultMap">
        SELECT
            qq.id,
            qq.user_id,
            u.nickname,
            qq.title,
            qq.content,
            qq.mountain,
            qq.view_count,
            qq.answer_count,
            qq.like_count,
            qq.is_solved,
            qq.accepted_answer_id,
            qq.created_at,
            qq.updated_at
        FROM qna_questions qq
        JOIN user u ON qq.user_id = u.id
        ORDER BY qq.created_at DESC
    </select>

    <select id="getQuestionById" resultMap="QnaQuestionResultMap">
        SELECT
            qq.id,
            qq.user_id,
            u.nickname,
            qq.title,
            qq.content,
            qq.mountain,
            qq.view_count,
            qq.answer_count,
            qq.like_count,
            qq.is_solved,
            qq.accepted_answer_id,
            qq.created_at,
            qq.updated_at
        FROM qna_questions qq
        JOIN user u ON qq.user_id = u.id
        WHERE qq.id = #{id}
    </select>

    <insert id="insertQuestion" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO qna_questions (user_id, title, content, mountain, created_at, updated_at)
        VALUES (#{userId}, #{title}, #{content}, #{mountain}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="updateQuestion">
        UPDATE qna_questions
        SET
            title = #{title},
            content = #{content},
            mountain = #{mountain},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <delete id="deleteQuestion">
        DELETE FROM qna_questions
        WHERE id = #{id}
    </delete>

    <update id="incrementQuestionViewCount">
        UPDATE qna_questions
        SET view_count = view_count + 1
        WHERE id = #{id}
    </update>

    <update id="incrementQuestionAnswerCount">
        UPDATE qna_questions
        SET answer_count = answer_count + 1
        WHERE id = #{id}
    </update>

    <update id="decrementQuestionAnswerCount">
        UPDATE qna_questions
        SET answer_count = answer_count - 1
        WHERE id = #{id}
    </update>

    <update id="updateQuestionSolvedStatus">
        UPDATE qna_questions
        SET
            is_solved = #{isSolved},
            accepted_answer_id = #{acceptedAnswerId}
        WHERE id = #{questionId}
    </update>

    <select id="getAnswersByQuestionId" resultMap="QnaAnswerResultMap">
        SELECT
            qa.id,
            qa.question_id,
            qa.user_id,
            u.nickname,
            u.userid AS user_login_id, qa.content,
            qa.like_count,
            qa.is_accepted,
            qa.created_at,
            qa.updated_at
        FROM qna_answers qa
        JOIN user u ON qa.user_id = u.id
        WHERE qa.question_id = #{questionId}
        ORDER BY qa.created_at ASC
    </select>

    <select id="getAnswerById" resultMap="QnaAnswerResultMap">
        SELECT
            qa.id,
            qa.question_id,
            qa.user_id,
            u.nickname,
            u.userid AS user_login_id, qa.content,
            qa.like_count,
            qa.is_accepted,
            qa.created_at,
            qa.updated_at
        FROM qna_answers qa
        JOIN user u ON qa.user_id = u.id
        WHERE qa.id = #{id}
    </select>

    <insert id="insertAnswer" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO qna_answers (question_id, user_id, content, created_at, updated_at)
        VALUES (#{questionId}, #{userId}, #{content}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="updateAnswer">
        UPDATE qna_answers
        SET
            content = #{content},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <delete id="deleteAnswer">
        DELETE FROM qna_answers
        WHERE id = #{id}
    </delete>

    <update id="updateAnswerAcceptedStatus">
        UPDATE qna_answers
        SET is_accepted = #{isAccepted}
        WHERE id = #{answerId}
    </update>

    <insert id="insertQuestionLike">
        INSERT INTO qna_question_likes (question_id, user_id, created_at)
        VALUES (#{questionId}, #{userId}, #{createdAt})
    </insert>

    <delete id="deleteQuestionLike">
        DELETE FROM qna_question_likes
        WHERE question_id = #{questionId} AND user_id = #{userId}
    </delete>

    <select id="getQuestionLikeCount" resultType="int">
        SELECT COUNT(*)
        FROM qna_question_likes
        WHERE question_id = #{questionId}
    </select>

    <select id="checkQuestionLikeStatus" resultType="com.Trekkit_Java.DTO.QnaLikeDTO">
        SELECT id, question_id as questionId, user_id as userId, created_at as createdAt
        FROM qna_question_likes
        WHERE question_id = #{questionId} AND user_id = #{userId}
    </select>

    <update id="incrementQuestionLikeCount">
        UPDATE qna_questions
        SET like_count = like_count + 1
        WHERE id = #{questionId}
    </update>

    <update id="decrementQuestionLikeCount">
        UPDATE qna_questions
        SET like_count = like_count - 1
        WHERE id = #{questionId}
    </update>

    <insert id="insertAnswerLike">
        INSERT INTO qna_answer_likes (answer_id, user_id, created_at)
        VALUES (#{answerId}, #{userId}, #{createdAt})
    </insert>

    <delete id="deleteAnswerLike">
        DELETE FROM qna_answer_likes
        WHERE answer_id = #{answerId} AND user_id = #{userId}
    </delete>

    <select id="getAnswerLikeCount" resultType="int">
        SELECT COUNT(*)
        FROM qna_answer_likes
        WHERE answer_id = #{answerId}
    </select>

    <select id="checkAnswerLikeStatus" resultType="com.Trekkit_Java.DTO.QnaLikeDTO">
        SELECT id, answer_id as answerId, user_id as userId, created_at as createdAt
        FROM qna_answer_likes
        WHERE answer_id = #{answerId} AND user_id = #{userId}
    </select>

    <update id="incrementAnswerLikeCount">
        UPDATE qna_answers
        SET like_count = like_count + 1
        WHERE id = #{answerId}
    </update>

    <update id="decrementAnswerLikeCount">
        UPDATE qna_answers
        SET like_count = like_count - 1
        WHERE id = #{answerId}
    </update>

</mapper>