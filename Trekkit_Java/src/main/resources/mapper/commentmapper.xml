<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Trekkit_Java.DAO.CommentDAO">

    <resultMap id="CommentResultMap" type="com.Trekkit_Java.DTO.CommentDTO">
        <id property="id" column="id"/>
        <result property="postId" column="post_id"/>
        <result property="userId" column="user_id"/>
        <result property="nickname" column="nickname"/>
        <result property="content" column="content"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="userLoginId" column="user_login_id"/>
    </resultMap>

    <select id="selectCommentsByPostId" resultMap="CommentResultMap">
        SELECT
            c.id,
            c.post_id,
            c.user_id,
            u.nickname,
            u.userid AS user_login_id, c.content,
            c.created_at,
            c.updated_at
        FROM comments c
        JOIN user u ON c.user_id = u.id
        WHERE c.post_id = #{postId}
        ORDER BY c.created_at ASC
    </select>

    <select id="selectCommentById" resultMap="CommentResultMap">
        SELECT
            c.id,
            c.post_id,
            c.user_id,
            u.nickname,
            u.userid AS user_login_id, c.content,
            c.created_at,
            c.updated_at
        FROM comments c
        JOIN user u ON c.user_id = u.id
        WHERE c.id = #{id}
    </select>

    <insert id="insertComment" parameterType="com.Trekkit_Java.DTO.CommentDTO"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO comments (
            post_id,
            user_id,
            content,
            created_at,
            updated_at
        ) VALUES (
            #{postId},
            #{userId},
            #{content},
            NOW(),
            NOW()
        )
    </insert>

    <update id="updateComment" parameterType="com.Trekkit_Java.DTO.CommentDTO">
        UPDATE comments
        SET
            content = #{content},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteComment">
        DELETE FROM comments WHERE id = #{id}
    </delete>

    <select id="selectCommentCountByPostId" resultType="int">
        SELECT COUNT(*)
        FROM comments
        WHERE post_id = #{postId}
    </select>

    <select id="selectCommentsByUserId" resultMap="CommentResultMap">
        SELECT
            c.id,
            c.post_id,
            c.user_id,
            u.nickname,
            u.userid AS user_login_id, c.content,
            c.created_at,
            c.updated_at
        FROM comments c
        JOIN user u ON c.user_id = u.id
        WHERE c.user_id = #{userId}
        ORDER BY c.created_at DESC
    </select>

</mapper>