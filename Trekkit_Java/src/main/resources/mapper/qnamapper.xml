<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"file:///C:\Users\805-06\Desktop\TP\5\Java\Trekkit_Java\src\main\resources\dtd\mybatis-3-mapper.dtd">

<mapper namespace="com.Trekkit_Java.DAO.QnaDAO">

    <!-- 질문 목록 조회 -->
    <select id="selectQuestions" parameterType="map" resultType="com.Trekkit_Java.DTO.QnaQuestionDTO">
        SELECT id, user_id as userId, nickname, title, content, mountain, 
               view_count as viewCount, answer_count as answerCount, like_count as likeCount,
               is_solved as isSolved, created_at as createdAt
        FROM qna_questions
        <where>
            <if test="mountain != null and mountain != ''">
                AND mountain = #{mountain}
            </if>
        </where>
        <choose>
            <when test="sort == 'popular'">
                ORDER BY like_count DESC, created_at DESC
            </when>
            <when test="sort == 'answered'">
                ORDER BY answer_count DESC, created_at DESC
            </when>
            <otherwise>
                ORDER BY created_at DESC
            </otherwise>
        </choose>
        LIMIT #{offset}, #{size}
    </select>

    <!-- 질문 총 개수 조회 -->
    <select id="selectQuestionsCount" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM qna_questions
        <where>
            <if test="mountain != null and mountain != ''">
                AND mountain = #{mountain}
            </if>
        </where>
    </select>

    <!-- 질문 상세 조회 -->
    <select id="selectQuestionById" parameterType="int" resultType="com.Trekkit_Java.DTO.QnaQuestionDTO">
        SELECT id, user_id as userId, nickname, title, content, mountain, 
               view_count as viewCount, answer_count as answerCount, like_count as likeCount,
               is_solved as isSolved, created_at as createdAt
        FROM qna_questions
        WHERE id = #{id}
    </select>

    <!-- 질문 등록 -->
    <insert id="insertQuestion" parameterType="com.Trekkit_Java.DTO.QnaQuestionDTO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO qna_questions (user_id, nickname, title, content, mountain, created_at)
        VALUES (#{userId}, #{nickname}, #{title}, #{content}, #{mountain}, NOW())
    </insert>

    <!-- 질문 조회수 증가 -->
    <update id="updateQuestionViewCount" parameterType="int">
        UPDATE qna_questions 
        SET view_count = view_count + 1 
        WHERE id = #{id}
    </update>

    <!-- 질문 답변 수 업데이트 -->
    <update id="updateQuestionAnswerCount">
        UPDATE qna_questions 
        SET answer_count = #{count}
        WHERE id = #{questionId}
    </update>

    <!-- 답변 목록 조회 -->
    <select id="selectAnswersByQuestionId" parameterType="int" resultType="com.Trekkit_Java.DTO.QnaAnswerDTO">
        SELECT id, question_id as questionId, user_id as userId, nickname, content,
               like_count as likeCount, is_accepted as isAccepted, created_at as createdAt
        FROM qna_answers
        WHERE question_id = #{questionId}
        ORDER BY is_accepted DESC, created_at ASC
    </select>

    <!-- 답변 등록 -->
    <insert id="insertAnswer" parameterType="com.Trekkit_Java.DTO.QnaAnswerDTO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO qna_answers (question_id, user_id, nickname, content, created_at)
        VALUES (#{questionId}, #{userId}, #{nickname}, #{content}, NOW())
    </insert>

    <!-- 질문 좋아요 존재 여부 확인 -->
    <select id="selectQuestionLikeExists" resultType="int">
        SELECT COUNT(*) FROM qna_question_likes 
        WHERE question_id = #{questionId} AND user_id = #{userId}
    </select>

    <!-- 질문 좋아요 추가 -->
    <insert id="insertQuestionLike">
        INSERT INTO qna_question_likes (question_id, user_id, created_at)
        VALUES (#{questionId}, #{userId}, NOW())
    </insert>

    <!-- 질문 좋아요 삭제 -->
    <delete id="deleteQuestionLike">
        DELETE FROM qna_question_likes 
        WHERE question_id = #{questionId} AND user_id = #{userId}
    </delete>

    <!-- 질문 좋아요 수 업데이트 -->
    <update id="updateQuestionLikeCount">
        UPDATE qna_questions 
        SET like_count = like_count + 
        <choose>
            <when test="increment">1</when>
            <otherwise>-1</otherwise>
        </choose>
        WHERE id = #{questionId}
    </update>

    <!-- 답변 좋아요 존재 여부 확인 -->
    <select id="selectAnswerLikeExists" resultType="int">
        SELECT COUNT(*) FROM qna_answer_likes 
        WHERE answer_id = #{answerId} AND user_id = #{userId}
    </select>

    <!-- 답변 좋아요 추가 -->
    <insert id="insertAnswerLike">
        INSERT INTO qna_answer_likes (answer_id, user_id, created_at)
        VALUES (#{answerId}, #{userId}, NOW())
    </insert>

    <!-- 답변 좋아요 삭제 -->
    <delete id="deleteAnswerLike">
        DELETE FROM qna_answer_likes 
        WHERE answer_id = #{answerId} AND user_id = #{userId}
    </delete>

    <!-- 답변 좋아요 수 업데이트 -->
    <update id="updateAnswerLikeCount">
        UPDATE qna_answers 
        SET like_count = like_count + 
        <choose>
            <when test="increment">1</when>
            <otherwise>-1</otherwise>
        </choose>
        WHERE id = #{answerId}
    </update>

</mapper>
