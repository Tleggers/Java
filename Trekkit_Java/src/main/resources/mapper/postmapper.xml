<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.Trekkit_Java.DAO.PostDAO">
    <select id="findAll" resultType="com.Trekkit_Java.DTO.PostDTO">
        SELECT id, user_id, nickname, title, mountain, content, view_count, like_count, comment_count, created_at
        FROM posts
        <where>
            <if test="mountain != null and mountain != ''">
                AND mountain = #{mountain}
            </if>
        </where>
        <choose>
            <when test="sort == '인기순'">
                ORDER BY like_count DESC, created_at DESC
            </when>
            <otherwise>
                ORDER BY created_at DESC
            </otherwise>
        </choose>
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="count" resultType="int">
        SELECT COUNT(*) FROM posts
        <where>
            <if test="mountain != null and mountain != ''">
                AND mountain = #{mountain}
            </if>
        </where>
    </select>

    <select id="findById" resultType="com.Trekkit_Java.DTO.PostDTO">
        SELECT * FROM posts WHERE id = #{postId}
    </select>
    
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO posts (user_id, nickname, title, mountain, content, created_at, updated_at)
        VALUES (#{userId}, #{nickname}, #{title}, #{mountain}, #{content}, NOW(), NOW())
    </insert>
    
    <update id="update">
        UPDATE posts
        SET title = #{title}, mountain = #{mountain}, content = #{content}, updated_at = NOW()
        WHERE id = #{id}
    </update>
    
    <delete id="delete">
        DELETE FROM posts WHERE id = #{postId}
    </delete>
    
    <update id="increaseViewCount">
        UPDATE posts SET view_count = view_count + 1 WHERE id = #{postId}
    </update>
    
    <insert id="saveImage">
        INSERT INTO post_images (post_id, image_path) VALUES (#{postId}, #{imagePath})
    </insert>
    
    <select id="findImagesByPostId" resultType="string">
        SELECT image_path FROM post_images WHERE post_id = #{postId} ORDER BY id ASC
    </select>
    
    <delete id="deleteImagesByPostId">
        DELETE FROM post_images WHERE post_id = #{postId}
    </delete>
    
    <insert id="addLike">
        INSERT INTO post_likes (post_id, user_id, created_at) VALUES (#{postId}, #{userId}, NOW())
    </insert>
    
    <delete id="deleteLike">
        DELETE FROM post_likes WHERE post_id = #{postId} AND user_id = #{userId}
    </delete>
    
    <select id="findLikeByPostIdAndUserId" resultType="int">
        SELECT COUNT(*) FROM post_likes WHERE post_id = #{postId} AND user_id = #{userId}
    </select>
    
    <update id="updateLikeCount">
        UPDATE posts SET like_count = (SELECT COUNT(*) FROM post_likes WHERE post_id = #{postId}) WHERE id = #{postId}
    </update>
    
    <update id="updateCommentCount">
        UPDATE posts SET comment_count = (SELECT COUNT(*) FROM comments WHERE post_id = #{postId}) WHERE id = #{postId}
    </update>
</mapper>